<?xml version="1.0" encoding="UTF-8"?>
<WebLink xmlns="http://soap.sforce.com/2006/04/metadata">
    <fullName>SVFManagementcListButton20210323061014476TkX</fullName>
    <availability>online</availability>
    <displayType>massActionButton</displayType>
    <linkType>javascript</linkType>
    <masterLabel>帳票出力 ▾</masterLabel>
    <openType>onClickJavaScript</openType>
    <protected>false</protected>
    <requireRowSelection>true</requireRowSelection>
    <url>/**
 * SVF Dropdown Button for ListView onClick JavaScript
 *
 * Generated by SVF Cloud. Do not edit.
 *
 * @version 1.2.0
 */
{!REQUIRESCRIPT(&apos;//repo.svfcloud.com/service/sfdc/release-rg/lib/js/jquery-1.8.3.min.js&apos;)};
{!REQUIRESCRIPT(&apos;/soap/ajax/48.0/connection.js&apos;)};
{!REQUIRESCRIPT(&apos;/soap/ajax/48.0/apex.js&apos;)};
{!REQUIRESCRIPT(&apos;/resource/&apos; &amp;  LEFT(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()),&apos;:&apos;,&apos;&apos;),&apos;-&apos;,&apos;&apos;),&apos; &apos;,&apos;&apos;),10) &amp; &apos;000/svfcloud__SVFPreviewJS&apos;)}

var buttonsJson = &apos;[{&quot;fullName&quot;:&quot;SVFManagementcButton20210323071729728nuM&quot;,&quot;label&quot;:&quot;日整連事故受付表&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413003425469BCX&quot;,&quot;label&quot;:&quot;火災新種事故受付票（傷害以外）&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413003354431Yty&quot;,&quot;label&quot;:&quot;火災新種事故受付票（傷害）&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413022908663pyv&quot;,&quot;label&quot;:&quot;事故受付票（風水災用）&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413022946056tcB&quot;,&quot;label&quot;:&quot;事故受付票（地震用）&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023153365Qnm&quot;,&quot;label&quot;:&quot;浜のヨット・モーターボート保険事故受付票&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023106536RFS&quot;,&quot;label&quot;:&quot;第三分野商品事故受付票&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023125368LVA&quot;,&quot;label&quot;:&quot;第三分野商品事故受付票送信&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023539110Km0&quot;,&quot;label&quot;:&quot;代理店契約内容照会カード&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton202104130235159631oL&quot;,&quot;label&quot;:&quot;契約内容相違連絡票&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023443038FMh&quot;,&quot;label&quot;:&quot;伝言カード&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton202104130237283687CE&quot;,&quot;label&quot;:&quot;現場急行サービス出動依頼書&quot;,&quot;previewSkip&quot;:false},{&quot;fullName&quot;:&quot;SVFManagementcButton20210413023805191DfR&quot;,&quot;label&quot;:&quot;補記&quot;,&quot;previewSkip&quot;:false}]&apos;;
var menus = JSON.parse(buttonsJson);
if ( console &amp;&amp; console.log ) console.log(&apos;svfc button: &apos;+buttonsJson);

var sObjType = &quot;{!$ObjectType.Management__c}&quot;;
var returnUrl = $(&quot;#retURL&quot;).val();
// menu of list view buttons
var button_menu = element.parentElement;
// form index of document object.
var formNo;
(function(){
var form_cnt = 0;
for(var formObj in document.forms){
  if(element.form===document.forms.item(form_cnt)){
    formNo = form_cnt;
  };
  form_cnt++;
}}());

// if the target form not found ,try no.2 for list view
if(typeof formNo===&quot;undefined&quot;) formNo=2 ;

// multi svf form menu
var dropdownMenuList = document.getElementById(&quot;svfmanagementcbutton20210323061014476tkxSvfMenuList&quot;);

var isListView=false;
if(returnUrl){isListView=true;}

element.setAttribute(&quot;onfocusout&quot;,&quot;window.setTimeout(function(){document.getElementById(&apos;svfmanagementcbutton20210323061014476tkxSvfMenuList&apos;).style.display = &apos;none&apos;;},210)&quot;);

// get absolute position
var rect = element.getBoundingClientRect();
var positionX = rect.left ;
var positionY = rect.top ;
// document and body
var dElm = document.documentElement , dBody = document.body ;
// scroll
var scrollX = dElm.scrollLeft || dBody.scrollLeft ;
var scrollY = dElm.scrollTop || dBody.scrollTop ;
// popup position
var x = positionX + scrollX - 9;
var y = positionY + scrollY - 76;

if(dropdownMenuList != null &amp;&amp; dropdownMenuList.style.display!=&quot;none&quot;){
  dropdownMenuList.style.display = &quot;none&quot;;
} else {
  if(dropdownMenuList != null) button_menu.removeChild(dropdownMenuList );

  dropdownMenuList = document.createElement(&quot;div&quot;);
  dropdownMenuList.id = &quot;svfmanagementcbutton20210323061014476tkxSvfMenuList&quot;;
  dropdownMenuList.class = &quot;svfMenu&quot;;
  dropdownMenuList.style.position = &quot;absolute&quot;;
  dropdownMenuList.setAttribute(&quot;style&quot;,&quot;display:block;list-style-type:none;position:absolute;left:&quot;+x +&quot;px;top:&quot;+y+&quot;px;box-shadow:rgba(112, 120, 136, 0.8) 0px 0px 2px 2px;z-index: 2147483647;&quot;);

  var dropdownMenu;
  var anchorLink;
  for (var menu in menus){
    var printedFlg = (!menus[menu].forbiddenField)
      ? &apos;&apos;
      : menus[menu].forbiddenField;
    dropdownMenu = document.createElement(&quot;div&quot;);
    dropdownMenu.setAttribute(&quot;style&quot;,&quot;padding:2px 10px 2px 10px;background-color: #FAFAFA;&quot;);
    dropdownMenu.setAttribute(&quot;onmouseover&quot;,&quot;this.setAttribute(&apos;style&apos;,&apos;padding:2px 10px 2px 10px;background-color: #EDF8FC;text-decoration:underline;display:block;&apos;);&quot;);
    dropdownMenu.setAttribute(&quot;onmouseout&quot;,&quot;this.setAttribute(&apos;style&apos;,&apos;padding:2px 10px 2px 10px;background-color: #FAFAFA;text-decoration:none;display:block;&apos;);&quot;);
    jQuery(dropdownMenu).on(&apos;mousedown&apos;, {
      formNo: formNo,
      printedFlg: printedFlg,
      svfcButtonName: menus[menu].fullName,
      title: menus[menu].label,
      previewSkip: menus[menu].previewSkip,
      sobj: &apos;Management__c&apos;,
      sfdcUrl: &apos;{!LEFT($Api.Partner_Server_URL_480,FIND(&quot;/services/Soap/&quot;, $Api.Partner_Server_URL_480)-1)}&apos;,
      svfcUrl: &apos;https://sfdc3.svfcloud.com/svf-cloud-service&apos;,
      returnUrl: returnUrl
    },
      function (event) {
        var self = event.data;
        var ids = Scontrol.prototype.getSelectedRecordIdsFromForm(document.forms.item(self.formNo), &quot;{!$ObjectType.Management__c}&quot;);
        if (ids != &apos;&apos;) {
          (function callout() {
            var error_msg = &apos;&apos;;
            if (self.printedFlg != &apos;&apos;) {
              try {
                var sobjects = sforce.connection.retrieve(self.printedFlg, self.sobj, ids);
                var printed_cnt = 0;
                for (var j = 0; j &lt; sobjects.length; j++) {
                  if (sobjects[j].get(self.printedFlg) == &apos;true&apos;) {
                    printed_cnt++;
                  }

                }
                if (printed_cnt == ids.length) {
                  error_msg = &apos;\u51fa\u529b\u3092\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 Outputting is not allowed for some records.&apos;;
                } else {
                  if (printed_cnt &gt; 0) {
                    error_msg = &apos;\u51fa\u529b\u3092\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 Outputting is not allowed for some records.&apos;;
                  }
                }
              } catch (e) {
                if (e.toString().includes(&apos;sf:INVALID_FIELD&apos;)) {
                  var indexColumn = e.toString().indexOf(&apos;No such column &apos;, 0);
                  var endOfColumn = e.toString().indexOf(&apos; on entity &apos;, indexColumn + 15);
                  var invalid_field = e.toString().substring(indexColumn + 15, endOfColumn);
                  error_msg = &apos;\u5FC5\u8981\u306A\u9805\u76EE\u306B\u30A2\u30AF\u30BB\u30B9\u51FA\u6765\u307E\u305B\u3093\u3002\u7BA1\u7406\u8005\u306B\u304A\u554F\u5408\u305B\u4E0B\u3055\u3044\u3002 You can not access the required fields.Please contact your administrator.Field=[&apos; + invalid_field + &apos;]&apos;;
                }
              }
            };
            if (self.sobj === &apos;Event&apos; || self.sobj === &apos;Task&apos;) {
              var eventCount = 0;
              for (var i = 0; i &lt; ids.length; i++) {
                if (ids[i].substr(0, 3) == &apos;00U&apos;)
                  eventCount++;
              }
              if ((self.sobj === &apos;Event&apos; &amp;&amp; ids.length != eventCount) || (self.sobj === &apos;Task&apos; &amp;&amp; eventCount &gt; 0)) {
                error_msg = &apos;\u5370\u5237\u5BFE\u8C61\u306B\u30DC\u30BF\u30F3\u306E\u7A2E\u5225\uFF08&apos; + self.sobj + &apos;\uFF09\u578B\u4EE5\u5916\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u3059\u3002 The target includes records other than &apos; + self.sobj + &apos; types.&apos;;
              }
            }
            if (error_msg != &apos;&apos;) {
              alert(error_msg);
              return false;
            }

            var sortKey = &apos;&apos;;
            var dir = &apos;&apos;;
            var returnUrl = self.returnUrl;
            if (returnUrl) {
              var instanceId = returnUrl.replace(/^[^?]*[?][^=]*=([^&amp;]*).*/, &apos;$1&apos;);
              if (instanceId) {
                var viewport = ListViewport.instances[instanceId];
                if (viewport &amp;&amp; viewport.grid) {
                  var sortState = viewport.grid.getView().sortState;
                  var colModel = viewport.grid.getColumnModel();
                  if (sortState &amp;&amp; colModel) {
                    var field = sortState.field;
                    if (field) {
                      var col = colModel.getColumnsBy(function (config) {
                        return field === config.dataIndex;
                      });
                      if (col &amp;&amp; col[0]) { sortKey = col[0].dataIndex.replace(/_/g, &apos;&apos;); dir = sortState.dir; }
                    }
                  }
                }
              } if (sortKey == &apos;&apos; &amp;&amp; typeof searchResultClick !== &apos;undefined&apos;) {
                if (searchResultClick.clickResults) {
                  var sortState = searchResultClick.clickResults.sorts[self.sobj];
                  if (sortState) {
                    sortKey = sortState.substring(0, sortState.indexOf(&apos;=&apos;));
                    dir = sortState.substr(sortState.indexOf(&apos;=&apos;), 1); (dir == 1) ? dir = &apos;ASC&apos; : dir = &apos;DESC&apos;;
                  } else {
                    sortKey = self.sobj + &apos;.Name&apos;; dir = &apos;ASC&apos;;
                  }
                }
              }
            }
            var target = &apos;svfpreview_&apos; + new Date().getTime();
            var screenLeft = window.screenX;
            var screenTop = window.screenY;

            var form = document.createElement(&apos;form&apos;);
            form.method = &apos;POST&apos;;
            form.action = self.svfcUrl + &apos;/sfdc/callout&apos;;
            form.target = target;

            var input;
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;callback&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, self.sfdcUrl + &apos;/apex/svfcloud__PreviewPage&apos;);
            form.appendChild(input);
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;ids&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, ids.toString());
            form.appendChild(input);
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;sortKey&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, sortKey);
            form.appendChild(input);
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;uniqueName&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, self.svfcButtonName + &apos;&amp;printedFlg=&apos; + self.printedFlg);
            form.appendChild(input);
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;appId&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, self.sobj);
            form.appendChild(input);
            input = document.createElement(&apos;input&apos;);
            input.setAttribute(&apos;name&apos;, &apos;dir&apos;);
            input.setAttribute(&apos;type&apos;, &apos;hidden&apos;);
            input.setAttribute(&apos;value&apos;, dir);
            form.appendChild(input);

            function formSubmit() {
              var body = document.getElementsByTagName(&quot;body&quot;)[0];
              body.appendChild(form);
              form.submit();
              body.removeChild(form);
            }

            if (self.previewSkip) {
              var ifrmePreview = svfcPreview.createIFramePreview();
              ifrmePreview.start(self.title, self.svfcButtonName, event.target.parentElement.parentElement, target, &apos;classic&apos;, formSubmit);
            } else {
              var popup = window.open(&quot;about:blank&quot;, target, &quot;menubar=no, toolbar=no, scrollbars=yes, resizable=yes, width=600, height=300, top=&quot; + screenTop + &quot;, left=&quot; + screenLeft);
              if (popup) {
                popup.focus();
                formSubmit();
              }
            }

          })();
        } else { alert(&apos;Not selected!&apos;); }
      });

    anchorLink = document.createElement(&quot;a&quot;);
    anchorLink.href=&quot;#&quot;;
    anchorLink.innerText = menus[menu].label;
    anchorLink.setAttribute(&quot;style&quot;,&quot;text-decoration:none;line-height: 20px;&quot;);

    dropdownMenuList.appendChild(dropdownMenu);
    dropdownMenu.appendChild(anchorLink);
  }
  //add menu lists
  button_menu.appendChild(dropdownMenuList );

  // ajust position
  rect = dropdownMenuList.getBoundingClientRect();
  var pos_x = rect.left;
  var pos_y = rect.top;
  var ajust_x = positionX - pos_x;
  var ajust_y = positionY - pos_y;
  // for ie
  userAgent = window.navigator.userAgent.toLowerCase();
  if ((userAgent.indexOf(&apos;msie&apos;) != -1)||(userAgent.indexOf(&apos;trident&apos;) != -1)) {
    x ++;y-= 5;
  }
  if(!isListView){
    y=y-4;
  }
  dropdownMenuList.style.left = x+ajust_x+2+&quot;px&quot;;
  dropdownMenuList.style.top = y+ajust_y+23+&quot;px&quot;;
}</url>
</WebLink>
